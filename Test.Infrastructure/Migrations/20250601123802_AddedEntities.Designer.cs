// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Infrastructure.Persistence.Contexts;

#nullable disable

namespace Test.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601123802_AddedEntities")]
    partial class AddedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9929115f-e463-4645-9325-1bebdbda948b")
                        },
                        new
                        {
                            Id = new Guid("53cca54c-213e-4e87-8a1f-7b8cc0922cf4")
                        });
                });

            modelBuilder.Entity("Test.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalMoney")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc6ee3e7-7725-468a-abd0-73003c1dcc49"),
                            CustomerId = new Guid("9929115f-e463-4645-9325-1bebdbda948b"),
                            OrderCode = "ORD001",
                            TotalMoney = 100m
                        },
                        new
                        {
                            Id = new Guid("b07af5f6-4e23-4097-a7ed-b00639ed1b2b"),
                            CustomerId = new Guid("9929115f-e463-4645-9325-1bebdbda948b"),
                            OrderCode = "ORD002",
                            TotalMoney = 200m
                        },
                        new
                        {
                            Id = new Guid("d1a8eeeb-7b7d-4c6e-8112-d6e0469e27db"),
                            CustomerId = new Guid("9929115f-e463-4645-9325-1bebdbda948b"),
                            OrderCode = "ORD003",
                            TotalMoney = 300m
                        },
                        new
                        {
                            Id = new Guid("e87d9384-aee1-4dbe-a215-73301d995e0b"),
                            CustomerId = new Guid("53cca54c-213e-4e87-8a1f-7b8cc0922cf4"),
                            OrderCode = "ORD004",
                            TotalMoney = 150m
                        },
                        new
                        {
                            Id = new Guid("543c1678-8843-4b64-b6b4-43f9935bb931"),
                            CustomerId = new Guid("53cca54c-213e-4e87-8a1f-7b8cc0922cf4"),
                            OrderCode = "ORD005",
                            TotalMoney = 250m
                        });
                });

            modelBuilder.Entity("Test.Domain.Entities.Views.OrderView", b =>
                {
                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalMoney")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("V_Orders", (string)null);
                });

            modelBuilder.Entity("Test.Domain.Entities.Order", b =>
                {
                    b.HasOne("Test.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Test.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
